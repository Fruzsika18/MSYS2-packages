From 6270e0c66e5d61d8c08f1bc0bed571046273374f Mon Sep 17 00:00:00 2001
From: Johannes Schindelin <johannes.schindelin@gmx.de>
Date: Fri, 26 Mar 2021 19:34:51 +0100
Subject: [PATCH 70/N] Work around old mingw-w64-headers in the i686 flavor of
 MSYS2

The i686 version of MSYS2 is not really serviced anymore (meaning: there
won't be any MSYS package versions for it). Therefore, a recent update
of the `mingw-w64-headers` package (needed to accommodate for Cygwin's
recent commit c1f7c4d1b6 (Cygwin: winlean.h: remove most of the extended
memory API, 2020-09-23)) won't ever make it to the 32-bit side of MSYS2.

To allow compiling the MSYS2 runtime for Git for Windows targeting i686,
let's conditionally revert that commit.

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
---
 winsup/cygwin/winlean.h | 43 +++++++++++++++++++++++++++++++++++++++++
 winsup/utils/cygpath.cc |  3 +++
 winsup/utils/ps.cc      |  2 ++
 3 files changed, 48 insertions(+)

diff --git a/winsup/cygwin/winlean.h b/winsup/cygwin/winlean.h
index 2e2308e..c580ca8 100644
--- a/winsup/cygwin/winlean.h
+++ b/winsup/cygwin/winlean.h
@@ -104,6 +104,49 @@ extern "C" {
 #error "Version >= 8 of the w32api headers is required"
 #endif
 
+#ifdef __i386__ /* 32-bit MSYS2 won't get new enough mingw-w64-headers */
+
+/* Define extended memory API here as long as not available from mingw-w64. */
+
+typedef struct _MEM_ADDRESS_REQUIREMENTS
+{
+  PVOID LowestStartingAddress;
+  PVOID HighestEndingAddress;
+  SIZE_T Alignment;
+} MEM_ADDRESS_REQUIREMENTS, *PMEM_ADDRESS_REQUIREMENTS;
+
+typedef enum MEM_EXTENDED_PARAMETER_TYPE
+{
+  MemExtendedParameterInvalidType = 0,
+  MemExtendedParameterAddressRequirements,
+  MemExtendedParameterNumaNode,
+  MemExtendedParameterPartitionHandle,
+  MemExtendedParameterUserPhysicalHandle,
+  MemExtendedParameterAttributeFlags,
+  MemExtendedParameterMax
+} MEM_EXTENDED_PARAMETER_TYPE, *PMEM_EXTENDED_PARAMETER_TYPE;
+
+#define MEM_EXTENDED_PARAMETER_TYPE_BITS 8
+
+typedef struct DECLSPEC_ALIGN(8) MEM_EXTENDED_PARAMETER
+{
+  struct
+  {
+      DWORD64 Type : MEM_EXTENDED_PARAMETER_TYPE_BITS;
+      DWORD64 Reserved : 64 - MEM_EXTENDED_PARAMETER_TYPE_BITS;
+  };
+  union
+  {
+      DWORD64 ULong64;
+      PVOID Pointer;
+      SIZE_T Size;
+      HANDLE Handle;
+      DWORD ULong;
+  };
+} MEM_EXTENDED_PARAMETER, *PMEM_EXTENDED_PARAMETER;
+
+#endif
+
 /* VirtualAlloc2 is declared in <w32api/memoryapi.h> if NTDDI_VERSION
    >= NTDDI_WIN10_RS4 (a compile-time condition).  But we need the
    declaration unconditionally, even though the function will only be
diff --git a/winsup/utils/cygpath.cc b/winsup/utils/cygpath.cc
index bc5f11d..450be43 100644
--- a/winsup/utils/cygpath.cc
+++ b/winsup/utils/cygpath.cc
@@ -24,6 +24,9 @@ details. */
 #define _WIN32_WINNT 0x0a00
 #define WINVER 0x0a00
 #define NOCOMATTRIBUTE
+#ifdef __i386__ /* 32-bit MSYS2 won't get new enough mingw-w64-headers */
+#define PMEM_EXTENDED_PARAMETER PVOID
+#endif
 #include <windows.h>
 #include <userenv.h>
 #include <shlobj.h>
diff --git a/winsup/utils/ps.cc b/winsup/utils/ps.cc
index 478ed8e..6f04716 100644
--- a/winsup/utils/ps.cc
+++ b/winsup/utils/ps.cc
@@ -6,6 +6,8 @@ This software is a copyrighted work licensed under the terms of the
 Cygwin license.  Please consult the file "CYGWIN_LICENSE" for
 details. */
 
+#ifdef __i386__ /* 32-bit MSYS2 won't get new enough mingw-w64-headers */
+#define PMEM_EXTENDED_PARAMETER PVOID
 #include <errno.h>
 #include <stdio.h>
 #include <locale.h>
-- 
2.9.0

