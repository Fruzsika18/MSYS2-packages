From d8172f57808b98729ef094a5a05ffa509fb33587 Mon Sep 17 00:00:00 2001
From: Takashi Yano <takashi.yano@nifty.ne.jp>
Date: Fri, 4 Mar 2022 23:57:12 +0900
Subject: [PATCH 043/N] Cygwin: pty: Take account of CR+NL line feed in
 input.

- Currently, individual CR or NL is treated as line feed in
  accept_input() and transfer_input(). This patch takes account
  of CR+NL as well.

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
---
 winsup/cygwin/fhandler_tty.cc | 23 ++++++++++++++++-------
 1 file changed, 16 insertions(+), 7 deletions(-)

diff --git a/winsup/cygwin/fhandler_tty.cc b/winsup/cygwin/fhandler_tty.cc
index a974606..f78dc76 100644
--- a/winsup/cygwin/fhandler_tty.cc
+++ b/winsup/cygwin/fhandler_tty.cc
@@ -582,16 +582,21 @@ fhandler_pty_master::accept_input ()
       paranoid_printf ("about to write %u chars to slave", bytes_left);
       /* Write line by line for transfer input. */
       char *p0 = p;
-      char *p1 = p;
+      char *p_cr = (char *) memchr (p0, '\r', bytes_left - (p0 - p));
+      char *p_nl = (char *) memchr (p0, '\n', bytes_left - (p0 - p));
       DWORD n;
-      while ((p1 = (char *) memchr (p0, '\n', bytes_left - (p0 - p)))
-	     || (p1 = (char *) memchr (p0, '\r', bytes_left - (p0 - p))))
+      while (p_cr || p_nl)
 	{
+	  char *p1 =
+	    p_cr ?  (p_nl ? ((p_cr + 1 == p_nl)
+			     ?  p_nl : min(p_cr, p_nl)) : p_cr) : p_nl;
 	  n = p1 - p0 + 1;
 	  rc = WriteFile (write_to, p0, n, &n, NULL);
 	  if (rc)
 	    written += n;
 	  p0 = p1 + 1;
+	  p_cr = (char *) memchr (p0, '\r', bytes_left - (p0 - p));
+	  p_nl = (char *) memchr (p0, '\n', bytes_left - (p0 - p));
 	}
       if (rc && (n = bytes_left - (p0 - p)))
 	{
@@ -3973,16 +3978,20 @@ fhandler_pty_slave::transfer_input (tty::xfer_dir dir, HANDLE from, tty *ttyp,
 	    }
 	  /* Call WriteFile() line by line */
 	  char *p0 = ptr;
-	  char *p_cr, *p_nl;
-	  while ((p_cr = (char *) memchr (p0, '\r', len - (p0 - ptr)))
-		 || (p_nl = (char *) memchr (p0, '\n', len - (p0 - ptr))))
+	  char *p_cr = (char *) memchr (p0, '\r', len - (p0 - ptr));
+	  char *p_nl = (char *) memchr (p0, '\n', len - (p0 - ptr));
+	  while (p_cr || p_nl)
 	    {
-	      char *p1 = p_cr ? (p_nl ? min (p_cr, p_nl) : p_cr) : p_nl;
+	      char *p1 =
+		p_cr ?  (p_nl ? ((p_cr + 1 == p_nl)
+				 ?  p_nl : min(p_cr, p_nl)) : p_cr) : p_nl;
 	      *p1 = '\n';
 	      n = p1 - p0 + 1;
 	      if (n && WriteFile (to, p0, n, &n, NULL) && n)
 		transfered = true;
 	      p0 = p1 + 1;
+	      p_cr = (char *) memchr (p0, '\r', len - (p0 - ptr));
+	      p_nl = (char *) memchr (p0, '\n', len - (p0 - ptr));
 	    }
 	  n = len - (p0 - ptr);
 	  if (n && WriteFile (to, p0, n, &n, NULL) && n)
-- 
2.9.0

