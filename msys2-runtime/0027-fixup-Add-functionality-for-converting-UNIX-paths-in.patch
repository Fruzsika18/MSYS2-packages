From 7b8896963f0a76cde532db9cb95e508422822e26 Mon Sep 17 00:00:00 2001
From: Johannes Schindelin <johannes.schindelin@gmx.de>
Date: Tue, 11 Aug 2020 21:12:54 +0200
Subject: [PATCH 27/N] fixup! Add functionality for converting UNIX paths in
 arguments and environment variables to Windows form for native Win32
 applications.

This reinstates the MSYS=wincmdln functionality that was inadvertently
broken by the patch: with that setting, all processes spawned by MSYS2
are supposed to fill the CommandLine field in the process information so
that e.g. `wmic process list` can see it (otherwise, only the executable
itself is listed in the command line, but all the arguments are
missing).

Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
---
 winsup/cygwin/spawn.cc | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/winsup/cygwin/spawn.cc b/winsup/cygwin/spawn.cc
index 0c7f645..f95038e 100644
--- a/winsup/cygwin/spawn.cc
+++ b/winsup/cygwin/spawn.cc
@@ -412,13 +412,13 @@ child_info_spawn::worker (const char *prog_arg, const char *const *argv,
 	          newargv.replace (i, tmpbuf);
 	          free (tmpbuf);
 	        }
-	      if ((wincmdln || !real_path.iscygexec ())
-	            && !cmd.fromargv (newargv, real_path.get_win32 (),
-			        real_path.iscygexec ()))
-	        {
-	          res = -1;
-	          __leave;
-	        }
+	    }
+	  if ((wincmdln || !real_path.iscygexec ())
+	        && !cmd.fromargv (newargv, real_path.get_win32 (),
+		    real_path.iscygexec ()))
+	    {
+	      res = -1;
+	      __leave;
 	    }
 
 
-- 
2.9.0

