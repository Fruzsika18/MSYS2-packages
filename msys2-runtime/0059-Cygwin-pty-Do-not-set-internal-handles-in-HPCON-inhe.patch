From d6b14d29efae76f1f64943f3031fba7b67d7cc9a Mon Sep 17 00:00:00 2001
From: Takashi Yano <takashi.yano@nifty.ne.jp>
Date: Mon, 11 Apr 2022 10:54:44 +0900
Subject: [PATCH 059/N] Cygwin: pty: Do not set internal handles in HPCON
 inheritable.

- The internal handles in HPCON should not be inheritable, however,
  the current code duplicates them as inheritable when handing over
  ownership of the pseudo console. This patch fixes the issue.

Addresses: https://cygwin.com/pipermail/cygwin/2022-April/251222.html
Signed-off-by: Johannes Schindelin <johannes.schindelin@gmx.de>
---
 winsup/cygwin/fhandler_tty.cc | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/winsup/cygwin/fhandler_tty.cc b/winsup/cygwin/fhandler_tty.cc
index 3699232..c91f400 100644
--- a/winsup/cygwin/fhandler_tty.cc
+++ b/winsup/cygwin/fhandler_tty.cc
@@ -2122,7 +2122,7 @@ fhandler_pty_common::resize_pseudo_console (struct winsize *ws)
     OpenProcess (PROCESS_DUP_HANDLE, FALSE, get_ttyp ()->pcon_pid);
   DuplicateHandle (pcon_owner, get_ttyp ()->h_pcon_write_pipe,
 		   GetCurrentProcess (), &hpcon_local.hWritePipe,
-		   0, TRUE, DUPLICATE_SAME_ACCESS);
+		   0, FALSE, DUPLICATE_SAME_ACCESS);
   acquire_attach_mutex (mutex_timeout);
   ResizePseudoConsole ((HPCON) &hpcon_local, size);
   release_attach_mutex ();
@@ -3600,15 +3600,15 @@ fhandler_pty_slave::close_pseudoconsole (tty *ttyp, DWORD force_switch_to)
 	      DuplicateHandle (GetCurrentProcess (),
 			       ttyp->h_pcon_write_pipe,
 			       new_owner, &new_write_pipe,
-			       0, TRUE, DUPLICATE_SAME_ACCESS);
+			       0, FALSE, DUPLICATE_SAME_ACCESS);
 	      DuplicateHandle (GetCurrentProcess (),
 			       ttyp->h_pcon_condrv_reference,
 			       new_owner, &new_condrv_reference,
-			       0, TRUE, DUPLICATE_SAME_ACCESS);
+			       0, FALSE, DUPLICATE_SAME_ACCESS);
 	      DuplicateHandle (GetCurrentProcess (),
 			       ttyp->h_pcon_conhost_process,
 			       new_owner, &new_conhost_process,
-			       0, TRUE, DUPLICATE_SAME_ACCESS);
+			       0, FALSE, DUPLICATE_SAME_ACCESS);
 	      DuplicateHandle (GetCurrentProcess (), ttyp->h_pcon_in,
 			       new_owner, &new_pcon_in,
 			       0, TRUE, DUPLICATE_SAME_ACCESS);
-- 
2.9.0

